{"name":"$.dialog","tagline":"Плагин jQuery для реализации адаптивных всплывающих диалогов","body":"## Описание\r\n\r\nАдаптивный всплывающий диалог, расширяющий плагин [$.popup](https://github.com/Konstantin-Kachurenko/jquery-popup). Добавляет к существующему API методы управления содержимым блока с автодетектом обертки `.popup-content` и поддержку html-триггеров `data-dialog=\"selector\"` у кликабельных элементов для автоматической инициализации и открытия диалогов.\r\n\r\n### Требования:\r\n\r\njQuery 1.7+, плагин [$.popup](https://github.com/Konstantin-Kachurenko/jquery-popup) 1.x.x\r\n\r\n### Совместимость с браузерами:\r\n\r\nInternet Explorer 9+, Opera 11.6+, Opera Mobile 11.5+, Safari 5+, Chrome, Firefox, IE Mobile\r\n\r\n## Подключение\r\n\r\nДля использования плагина подключите скрипт в любом месте страницы, после подключения плагина $.popup.\r\n\r\n    <link rel=\"stylesheet\" href=\"path/to/script/jquery.popup.min.css\" >\r\n    <script src=\"path/to/script/jquery.popup.min.js\"></script>\r\n    <script src=\"path/to/script/jquery.popup.dialog.min.js\"></script>\r\n\r\n## Примеры\r\n\r\n### Базовый пример\r\n\r\nБлоки с классом `.popup` по умолчанию невидимы, так что они могут быть расположены в любом месте документа. Плагин сам позаботится об их переносе в конец `<body>`, чтобы избежать проблем со свойствами `z-index`.\r\n\r\n\t<!-- Базовые стили, обязательные для подключения -->\r\n\t<link rel=\"stylesheet\" href=\"path/to/script/jquery.popup.min.css\" >\r\n\t\r\n\t<!-- Скрипты плагина -->\r\n\t<script src=\"path/to/script/jquery.popup.min.js\"></script>\r\n\t<script src=\"path/to/script/jquery.popup.dialog.min.js\"></script>\r\n\t\r\n\t<!-- \r\n\tТемизация всплывающих окон осуществляется\r\n\tс помощью классов: .popup, .popup-content и .popup-overlay\r\n\t//-->\r\n\t<style type=\"text/css\">\r\n\t.popup {\r\n\t  background-color: rgb( 248, 248, 248 );\r\n\t  box-shadow: 0px 2px 2px 0px rgba( 0, 0, 0, .3 );\r\n\t}\r\n\t.popup-content {\r\n\t  padding: 20px 40px 30px 40px;\r\n\t}\r\n\t.popup-overlay {\r\n\t  background-color: rgba( 0, 0, 0, .3 );\r\n\t}\r\n\t</style>\r\n\t\r\n\t<!-- \r\n\tАтрибут \"data-dialog\" содержит CSS-селектор для доступа к диалогу \r\n\t-->\r\n\t<button data-dialog=\"#popup-dialog\">\r\n\t  Открыть диалог\r\n\t</button>\r\n\t\r\n\t<!--\r\n\tЭффекты появления устанавливаются блоку .popup с помощью классов: \r\n\t.effect-fade-scale, .effect-slide-right, .effect-slide-left, \r\n\t.effect-slide-top, .effect-newspaper и .effect-sticky\r\n\tЕсли класс эффекта не задан, анимация будет сведена до 'fade in'.\r\n\t\r\n\tЛюбой элемент с классом .popup-close внутри диалога\r\n\tбудет вызывать его закрытие по клику.\r\n\t\r\n\t.popup-overlay создается автоматически, если он не найден \r\n\tсразу перед блоком .popup. \r\n\t\r\n\t.popup-content является опциональным и не создается автоматически, \r\n\tоднако он описан в таблице стилей и его наличие учитывается в работе\r\n\tметодов .empty() и .put() \r\n\t\r\n\tОсновное назначение этого блока - создавать прокручиваемую область \r\n\tвнутри диалога, если он не поместился на экране польностью.\r\n\t//-->\r\n\t\r\n\t<div class=\"popup effect-fade-scale\" id=\"popup-dialog\">\r\n\t  <div class=\"popup-content\">\r\n\t    <h3>Всплывающий диалог</h3>\r\n\t    <p>\r\n\t    Привет, я - плагин для реализации всплывающих диалогов \r\n\t    с красивыми анимациями появления на CSS3, и с минимальным\r\n\t    количеством javascript и css кода.\r\n\t    </p>\r\n\t    <button class=\"popup-close\">закрыть</button>\r\n\t  </div>\r\n\t</div>\r\n\r\n### Использование API\r\n\r\nПри инициализации плагина, объект `$.dialog` сохраняется в `.data('popup')` у каждого из блоков, попавшего в исходный набор. Этот объект предоставляет управление копией плагина:\r\n\r\n\t<!-- Форма оформления подписки на новости -->\r\n\t<form id=\"form-subscribe\">\r\n\t  <input type=\"email\" name=\"subscribe\" placeholder=\"Email\" />\r\n\t  <button type=\"submit\">Подписаться на новости</button>\r\n\t</form>\r\n\t\r\n\t<!-- \r\n\tДиалог оповещения об отправке запроса. \r\n\t-->\r\n\t<div class=\"popup effect-fade-scale\" id=\"popup-dialog\">\r\n\t  <div class=\"popup-content\">\r\n\t    <h3>Запрос принят</h3>\r\n\t    <p>Спасибо за интерес, проявленный к нашей компании.</p>\r\n\t  </div>\r\n\t</div>\r\n\t\r\n\t<script>\r\n\t  $(document).ready(function(){\r\n\t\r\n\t    // Применяем плагин к блоку #popup-dialog\r\n\t    var $dialog = $('#popup-dialog').dialog();\r\n\t\r\n\t    // Включаем обработку отправки формы\r\n\t    $('#form-subscribe').submit(function(){\r\n\t\r\n\t      // Получаем доступ к плагину\r\n\t      var plugin = $dialog.data('popup');\r\n\t\r\n\t      // Отображаем диалог\r\n\t      plugin.open();\r\n\t\r\n\t      // Закрываем диалог автоматически через три секунды\r\n\t      plugin.close(3000);\r\n\t    });\r\n\t  });\r\n\t</script>\r\n\r\n### Декларативная настройка при инициализации\r\n\r\nВсе доступные опции инициализации плагина могут быть описаны с помощью data-атрибутов диалога `.popup`:\r\n\r\n\t<!-- Динамическая загрузка содержимого диалога при показе -->\r\n\t\r\n\t<style type=\"text/css\">\r\n\t#ajax-dialog:empty {\r\n\t  background: url(preloader.gif) 50% 50% no-repeat;\r\n\t}\r\n\t</style>\r\n\t\r\n\t<div class=\"popup effect-fade-scale\" id=\"ajax-dialog\"\r\n\t  data-modal=\"\"\r\n\t  data-open=\"$(this).data('popup').empty().load('ajax.php')\"\r\n\t></div>\r\n\t\r\n\t<button data-dialog=\"#ajax-dialog\">\r\n\t  Открыть диалог\r\n\t</button>\r\n\r\n## Параметры инициализации\r\n\r\n`Boolean modal = false`\r\n\r\nМодальный режим, в котором клик по подложке блока не закрывает его.\r\n\r\n`Boolean bubble = true`\r\n\r\n\"Всплывание\" блока вверх по дереву документа. При инициализации с этим параметром, установленным в true, блок будет перемещен в конец \\<body\\>, не зависимо от того, где он был изначально.\r\n\r\n`Function open = Null`\r\n\r\nФункция, вызываемая перед отображением всплывающего блока.\r\n\r\n`Function close = Null`\r\n\r\nФункция, вызываемая перед скрытием всплывающего блока.\r\n\r\n`Function realign = Null`\r\n\r\nФункция, вызываемая перед установкой свойств `margin-left` и `margin-top` при позиционировании блока.\r\n\r\n## API\r\n\r\nПри инициализации плагина, объект $.dialog сохраняется в .data('popup') у каждого из блоков, попавшего в исходный набор. Этот объект предоставляет управление копией плагина и имеет следующий набор свойств методов:\r\n\r\n### Свойства\r\n\r\n`jQuery $popup`\r\n\r\nВсплывающий блок\r\n\r\n`jQuery $overlay`\r\n\r\nПодложка всплывающего блока\r\n\r\n### Методы\r\n\r\n`$.popup config([Object params])`\r\n\r\nРасширяет набор параметров инициализации, добавляя из объекта `Object params` новые параметры и перезаписывая уже существующие.\r\n\r\n`$.popup open()`\r\n\r\nПоказывает всплывающий блок и его подложку.\r\n\r\n`$.popup overlay()`\r\n\r\nПоказывает только подложку. После вызова этого метода, сам блок по прежнему может быть отображен с помощью метода `open()`\r\n\r\n`$.popup close([Number delay])`\r\n\r\nСкрывает всплывающий блок. Если числовой параметр `delay` передан и больше 0, закрытие будет отсрочено на переданное количество микросекунд.\r\n\r\n`$.popup realign()`\r\n\r\nПозиционирует блок так же, как при показе или изменении размеров окна. Полезен при динамическом наполнении блока.\r\n\r\n`jQuery empty()`\r\n\r\nУдаляет содердимое диалога, возвращая блок `.popup-content`, либо сам диалог `.popup`, если `.popup-content` не найден.\r\n\r\n`jQuery put(mixed content)`\r\n\r\nПомещает содержимое в блок `.popup-content`, либо в сам диалог `.popup`, если `.popup-content` не найден. Параметр content может быть как строкой, так и DOM-элементом или объектом jQuery, представляющим элемент.\r\n\r\n`jQuery destroy()`\r\n\r\nУничтожает копию плагина, возвращая исходный блок.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}